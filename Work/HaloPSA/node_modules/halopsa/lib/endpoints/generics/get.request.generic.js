import { got } from 'got';
export class haloGetRequest {
    hostname;
    accessToken;
    endpoint;
    constructor(hostname, accessToken, endpoint) {
        this.hostname = hostname;
        this.accessToken = accessToken;
        this.endpoint = endpoint;
    }
    get(params) {
        return new Promise(async (resolve, reject) => {
            let query = new URLSearchParams();
            if (params) {
                params.id ? query.append('id', params.id.toString()) : null;
                params.ticket_id ? query.append('ticket_id', params.ticket_id.toString()) : null;
                params.includeemail ? query.append('includeemail', params.includeemail.toString()) : null;
                params.includedetails ? query.append('includedetails', params.includedetails.toString()) : null;
                params.mostrecent ? query.append('mostrecent', params.mostrecent.toString()) : null;
                params.agentonly ? query.append('agentonly', params.agentonly.toString()) : null;
                params.emailonly ? query.append('emailonly', params.emailonly.toString()) : null;
                params.nonsystem ? query.append('nonsystem', params.nonsystem.toString()) : null;
            }
            try {
                let response = await got.get({
                    url: `https://${this.hostname}/api//${params.id}`,
                    headers: {
                        Authorization: `Bearer ${this.accessToken}`,
                        'Content-Type': 'application/json',
                    },
                    searchParams: query,
                    responseType: 'json',
                });
                resolve(response.body);
            }
            catch (error) {
                reject(error);
            }
        });
    }
}
